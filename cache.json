{
  "sources": [
    {
      "title": "tonsky.me",
      "feedUrl": "http://tonsky.me/blog/atom.xml",
      "siteUrl": "https://tonsky.me/",
      "articles": [
        {
          "id": "https://tonsky.me/blog/humble-signals/",
          "author": null,
          "description": "An experiment of using incremental computations for managing state in Humble UI",
          "link": "https://tonsky.me/blog/humble-signals/",
          "publishedOn": "2023-05-18T00:00:00.000Z",
          "wordCount": 3820,
          "title": "Humble Chronicles: Managing State with Signals",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "GolangCode",
      "feedUrl": "https://golangcode.com/index.xml",
      "siteUrl": "https://golangcode.com/",
      "articles": []
    },
    {
      "title": "Applied Go",
      "feedUrl": "https://appliedgo.net/index.xml",
      "siteUrl": "https://appliedgo.net/",
      "articles": []
    },
    {
      "title": "Dave Cheney",
      "feedUrl": "https://dave.cheney.net/feed/atom",
      "siteUrl": "https://dave.cheney.net",
      "articles": []
    },
    {
      "title": "David Heinemeier Hansson",
      "feedUrl": "https://world.hey.com/dhh/feed.atom",
      "siteUrl": "https://world.hey.com/dhh",
      "articles": [
        {
          "id": "https://world.hey.com/dhh/we-need-not-all-be-connected-all-the-time-a4633c0e",
          "author": null,
          "description": "When I went to school in the 80s and 90s, the communication between the institution and home was limited. Kids could bring home a flyer about some future event, they'd get their grades and remarks detailed in a little grey book, and once a year parents would come in for a chat with the teachers. That was basically it, and it was glorious.\nIn Denmark today, we have a centralized app used by all Danish public schools called Aula. Think of it as Facebook for teachers and parents. For our kid in an international school, there's a similar system. All of it sucks. And I don't mean in the way that the apps are poorly made, although that is typically also true, but in the way that adding IT to the parent-school relationship only made it worse.\nI say that as someone who've spent a long career in th…",
          "link": "https://world.hey.com/dhh/we-need-not-all-be-connected-all-the-time-a4633c0e",
          "publishedOn": "2023-06-02T07:51:47.000Z",
          "wordCount": 539,
          "title": "We need not all be connected, all the time",
          "imageUrl": "https://world.hey.com/dhh/avatar-df6405b0f7fafda980fd38b04c334bec936aef69"
        },
        {
          "id": "https://world.hey.com/dhh/when-promotions-become-punishment-b1cc1430",
          "author": null,
          "description": "The world is full of talented, capable people who'd rather put their own efforts to direct use than manage others. But the natural inclination is to promote senior contributors up a managerial ladder, and out of the trenches. This often ends poorly, turning the promotion into a punishment.\nIt's usually not that these potential managers don't like working with others. Quite the contrary. I've found that nothing motivates ambitious people like working close together with other talented individuals. It's also usually not that they're uncomfortable being senior, in terms of setting a direction for the work. It's that they don't want the responsibility, and associated guilt, that comes with managing others. Especially when there's a need for correction.\nI've witnessed time and again how someone…",
          "link": "https://world.hey.com/dhh/when-promotions-become-punishment-b1cc1430",
          "publishedOn": "2023-06-01T09:21:02.000Z",
          "wordCount": 511,
          "title": "When promotions become punishment",
          "imageUrl": "https://world.hey.com/dhh/avatar-df6405b0f7fafda980fd38b04c334bec936aef69"
        },
        {
          "id": "https://world.hey.com/dhh/start-them-in-the-deep-end-8c9c77fe",
          "author": null,
          "description": "The kindest thing you can do to a new team member is to involve them in something real and challenging right away. Don't squander weeks of new-job enthusiasm with baby rails and play tasks. Get them into the deep end right from the start.\nThis doesn't mean leaving them all alone to figure out the culture, the work, and the people by themselves, mind you. Nobody hits the ground running, and everyone needs guidance and mentorship to thrive in a new situation. But it does mean that the context in which you offer that assistance ought to be real as quickly as possible.\nFor programmers at 37signals, for example, we assign both a buddy and a mentor to new hires. The buddy is solely there to be a friendly guide to the innards of the organization. Why do we do the things we do? The mentor is there…",
          "link": "https://world.hey.com/dhh/start-them-in-the-deep-end-8c9c77fe",
          "publishedOn": "2023-05-31T09:20:38.000Z",
          "wordCount": 469,
          "title": "Start them in the deep end",
          "imageUrl": "https://world.hey.com/dhh/avatar-df6405b0f7fafda980fd38b04c334bec936aef69"
        },
        {
          "id": "https://world.hey.com/dhh/360-degrees-of-phony-back-patting-ec915f47",
          "author": null,
          "description": "In all the years we ran 360 performance reviews – the employee assessment process where you solicit feedback from peers, reports, and manager – I can think of only once when it lead to a meaningful follow-up. The rest of the time, across hundreds of reviews, it was an arduous, awkward affair of forcing people to come up with novel ways to congratulate each other on command. Dropping these 360s was perhaps one of the most popular acts of minimizing management we've ever done at 37signals.\nIt should have been obvious that the 360 process wasn't valuable because almost nobody wanted to do it. Getting folks to fill out their reviews required constant nagging, resulting in weeks-long procrastination. That is not the hallmark of a happy process that serves the interests of the people involved.\nI…",
          "link": "https://world.hey.com/dhh/360-degrees-of-phony-back-patting-ec915f47",
          "publishedOn": "2023-05-30T07:30:49.000Z",
          "wordCount": 614,
          "title": "360 degrees of phony back-patting",
          "imageUrl": "https://world.hey.com/dhh/avatar-df6405b0f7fafda980fd38b04c334bec936aef69"
        },
        {
          "id": "https://world.hey.com/dhh/recharging-trust-batteries-with-meetups-in-a-remote-company-5ad0cbeb",
          "author": null,
          "description": "Nothing can substitute for spending time together in person as a way to build bonds, create connections, and foster trust with your colleagues. There's just a special kind of magic that comes from being together, which Zoom will never match or catch. But what's enabled the remote-work revolution to be effective is that these moments don't need to happen every day, week, or even month. \nAt 37signals, we've been doing company-wide meetups twice a year for over fifteen years. Through these meetups, we've secured the lion's share of the social in-person benefits afforded by an office, while allowing nearly eighty people from twenty countries to collaborate happily and effectively. It's remarkable how nourishing it can be simply to see your coworkers every six months, and then rely on those ful…",
          "link": "https://world.hey.com/dhh/recharging-trust-batteries-with-meetups-in-a-remote-company-5ad0cbeb",
          "publishedOn": "2023-05-26T08:27:46.000Z",
          "wordCount": 469,
          "title": "Recharging trust batteries with meetups in a remote company",
          "imageUrl": "https://world.hey.com/dhh/avatar-df6405b0f7fafda980fd38b04c334bec936aef69"
        },
        {
          "id": "https://world.hey.com/dhh/manage-process-before-people-20736695",
          "author": null,
          "description": "If you want to run a company that's light on full-time managers, you have to focus on managing processes before people. The traditional paradigm of a reporting manager that's constantly following up with their reports, conducting daily stand-up meetings, weekly 1-1s, and all other forms of intensive supervision, needs to be (mostly) replaced with an asynchronous, self-managing paradigm instead.\nLet's look at five ways that principle works in practice at 37signals. \nFirst, we've replaced the commonly used daily stand-up meetings with a set of automated questions in Basecamp. On Monday mornings, we ask everyone \"What are you going to work on this week?\", and at the end of every day, we ask \"What did you work on today?\". These two recurring questions provide the key process for keeping everyo…",
          "link": "https://world.hey.com/dhh/manage-process-before-people-20736695",
          "publishedOn": "2023-05-25T08:23:15.000Z",
          "wordCount": 724,
          "title": "Manage process before people",
          "imageUrl": "https://world.hey.com/dhh/avatar-df6405b0f7fafda980fd38b04c334bec936aef69"
        },
        {
          "id": "https://world.hey.com/dhh/the-luxury-of-working-without-metrics-02e5dbac",
          "author": null,
          "description": "There are a million metrics you can use to track the health of a  subscription software business like ours. Customer life-time value, cost of acquisition, cohort retention, revenue churn, net promoter score, funnel conversion rates, to name but a few. All useful calculations, but I can't tell you what bliss it's been to steer 37signals without them for twenty years.\nThat's not to say that we never run these numbers, but it is to say that these numbers never run us. Because in the end, even the most sophisticated KPIs all inevitably serve the simplest calculations: Are we making money? Is it enough? You don't need a degree in statistics to determine that.\nWhere this is most evident for us is in the product. I remember reading a story about how Google once tested 127 different shades of blue…",
          "link": "https://world.hey.com/dhh/the-luxury-of-working-without-metrics-02e5dbac",
          "publishedOn": "2023-05-23T09:39:15.000Z",
          "wordCount": 570,
          "title": "The luxury of working without metrics",
          "imageUrl": "https://world.hey.com/dhh/avatar-20210222112907000000-293866624"
        },
        {
          "id": "https://world.hey.com/dhh/but-what-if-you-re-wrong-6de2168c",
          "author": null,
          "description": "They seemed so sure. First, that the pandemic couldn't possibly have come from a lab rather than a market. Then, that masks – any masks! – would materially retard the spread. Later, that the vaccine would prevent you from getting the virus. Finally, that if you were vaccinated, you couldn't spread the virus. All of that, and plenty more, turned out to be false.\nIn the years to come, there'll be plenty of time to point fingers. Who, when, where. The main characters are already digging their rhetorical tunnels. \nBut as we've passed the three-year anniversary for pandemic, I think it's just as important to look inwards. Because not only did most people buy the false claims, they became little foot soldiers in the crusade for them. Including me, for a while.\nStart by watching this compilation …",
          "link": "https://world.hey.com/dhh/but-what-if-you-re-wrong-6de2168c",
          "publishedOn": "2023-05-22T11:42:39.000Z",
          "wordCount": 547,
          "title": "But what if you're wrong?",
          "imageUrl": "https://world.hey.com/dhh/avatar-20210222112907000000-293866624"
        },
        {
          "id": "https://world.hey.com/dhh/sitting-on-the-bench-ba937b84",
          "author": null,
          "description": "There are many reasons to pick working for a bigger company in tech. The benefits, the pay, and, at least until recently, the job security. In many ways, it's hard to argue with the cold logic of taking a seat on a star destroyer, if you can land one. But odds are you'll be sitting on the bench if you do.\nThat is, your talents won't get to play center stage in a way that really matters. If you weren't there, there'd probably just be someone else to fill the slot, and it'd rarely make a big difference either way. That's part of the resilience of a big ship, it's built to withstand whatever the weather, so much of the crew is redundant by design.\nThat just isn't so in a small boat. If you're not rowing, everyone will notice. You can't just rest and vest. You gotta play. That's the appeal. You gotta play.\nThat can be intellectually exhausting, but it's also the kind of flexing of your talents that make them grow rapidly. It's the fact that others, and the boat as a whole, count on you being there that rewards you with meaning.\nWould you rather be on the bench in the big leagues or playing every game with an underdog team moving up?",
          "link": "https://world.hey.com/dhh/sitting-on-the-bench-ba937b84",
          "publishedOn": "2023-05-15T08:17:29.000Z",
          "wordCount": 302,
          "title": "Sitting on the bench",
          "imageUrl": "https://world.hey.com/dhh/avatar-20210222112907000000-293866624"
        },
        {
          "id": "https://world.hey.com/dhh/that-underdog-dna-62795a00",
          "author": null,
          "description": "Jason just penned a beautiful, succinct ode to the underdogs. Go read it.\nIt's funny how finding just the right word unlocks the perfect mental image. We've often thought of ourselves as being in the corner of the small business, but that was never quite right. There are many kinds of small businesses, not all of them thinking of themselves as underdogs. But for the ones who do, those are our people.\nWhat I love most about underdogs is how they can't help having something on the line. As Nassim Taleb would say, they have skin in the game. And it's incredible what kind of difference that makes. The easiest way to solve the agent-principle problem is to skip the agent, at least at the top.\nThat's why \"small\" never really did capture our audience or our allegiance either. 37signals isn't even technically a small business any more. We're just under eighty people. We've got over a hundred thousand customers. We have cloud bills in the millions, and revenue many times that. But we sure as hell are underdogs. Fierce and feisty ones.\nThere's a deep bond in that attitude. The people who connect the most with our writing, our books, our process, our tools, and our offerings usually share that underdog DNA. They might not always be as bold about it as we frequently are, but they're thinking it, and they appreciate when we give those thoughts a strong voice in the public sphere.\nAs Jason writes, being an underdog is an ethos: Drive. Grit. Scrappiness. Independence. Those as the signals, but they're also often dimmed by fear, doubt, and uncertainty. Are we going to make it? Will the big dogs eat our lunch? What's the next move? Helping to allay those sentiments, and encouraging someone to keep on, is what continues to give me the spark to stick with it twenty years in.\nUnderdogs stick together. We're making Basecamp for them.",
          "link": "https://world.hey.com/dhh/that-underdog-dna-62795a00",
          "publishedOn": "2023-05-12T08:25:03.000Z",
          "wordCount": 404,
          "title": "That underdog DNA",
          "imageUrl": "https://world.hey.com/dhh/avatar-20210222112907000000-293866624"
        },
        {
          "id": "https://world.hey.com/dhh/it-s-not-just-cloud-costs-that-are-out-of-control-efcd098c",
          "author": null,
          "description": "We're letting our yearly commitment to Datadog, a performance and monitoring tool, expire at the end of this month. Not because we don't like the service. It's actually really nice! But because the $88,000/year it was going to cost us to continue is just ridiculous. And it's emblematic of a larger issue: Enterprise SaaS pricing is getting silly.\nBut as silly as I thought our bill was going to be, there's a Datadog customer paying $65 million for their services!! This came up on their most recent earnings call. It's apparently a crypto company who \"optimized\" their bill by committing to this ludicrous spend:\n  \n      \n        \n\n  \nAt the risk of invoking a tired cliche, this kind of outlay for a performance and monitoring service sounds like a 0% interest rate phenomenon. There's just no un…",
          "link": "https://world.hey.com/dhh/it-s-not-just-cloud-costs-that-are-out-of-control-efcd098c",
          "publishedOn": "2023-05-11T08:40:28.000Z",
          "wordCount": 452,
          "title": "It's not just cloud costs that are out of control",
          "imageUrl": "https://world.hey.com/dhh/efcd098c/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHNLd2RxWFgxSSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--034767300620f0766911ecf12bd27747f0328057/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDRG9UY21WemFYcGxYM1J2WDJacGJHeGJCMmtDc0FScEFuWUNPZ3h4ZFdGc2FYUjVhUzA2Q25OMGNtbHdWQT09IiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--5f3b12054ee1575e23e552561c36229a846c13ea/datadog-costs.jpeg"
        },
        {
          "id": "https://world.hey.com/dhh/the-misallocation-of-tech-talent-6c3b4403",
          "author": null,
          "description": "Getting fired sucks. It doesn't matter how or when. It just sucks. And right now there are an awful lot of people in the tech industry feeling just how much. But what's bad for the individual isn't always bad for the group. Believe it or not, there's also collective upside to the massive tech layoffs happening at the moment.\nLike undoing the absurd hiring spree committed by the largest tech companies during the pandemic. This spree swallowed up a preposterous amount of talent, then put much of it to work on bullshit projects with little to no value for the company or the economy as a whole.\nSuch hoarding of tech talent represented a tragic misallocation of productive capacity. The likes of Amazon, Meta, Google, and many others added tens of thousands of positions to already bloated bureauc…",
          "link": "https://world.hey.com/dhh/the-misallocation-of-tech-talent-6c3b4403",
          "publishedOn": "2023-05-09T09:13:09.000Z",
          "wordCount": 581,
          "title": "The misallocation of tech talent",
          "imageUrl": "https://world.hey.com/dhh/avatar-20210222112907000000-293866624"
        },
        {
          "id": "https://world.hey.com/dhh/in-defense-of-the-office-450fc177",
          "author": null,
          "description": "You're never getting me back into an office. I credit much of my career to escaping that place in the early 2000s. It wasn't until I found the prolonged solitude of working from home that I could consistently make big leaps in my creative process. The pandemic taught millions the same lesson. And yet – AND YET! – I'm going to come to the defense of the office. \nBecause I find it so nonsensical to hear remote-work advocates proclaim the universal, moral superiority of abolishing the office, as I did listening to those who couldn't envision productive work from home just a few minutes ago. Let's be real here. The modern world we live in was designed and executed from an office. It's a perfectly legitimate way of working.\nIt may not be your preferred way of working. It sure as hell isn't mine…",
          "link": "https://world.hey.com/dhh/in-defense-of-the-office-450fc177",
          "publishedOn": "2023-05-08T07:14:43.000Z",
          "wordCount": 448,
          "title": "In defense of the office",
          "imageUrl": "https://world.hey.com/dhh/avatar-20210222112907000000-293866624"
        },
        {
          "id": "https://world.hey.com/dhh/programming-types-and-mindsets-5b8490bc",
          "author": null,
          "description": "One of the longest running schisms in programming is that of static vs dynamic typing. I've heard a million arguments from both sides throughout my entire career, but seen very few of them ever convinced anyone of anything. As rationalizations masquerading as reason rarely do in matters of faith. The rider will always justify the way of the elephant.\nThat's not to say there aren't people who've switched camps. In fact, such individuals usually shout the loudest rationalizations of all. Often with the charm of a livelong omnivore suddenly turning vegan or a traditional banker who caught a lucky ride on crypto. The shorter the faith, the brighter the flame.\nPersonally, I'm unashamedly a dynamic typing kind of guy. That's why I love Ruby so very much. It takes full advantage of dynamic typing…",
          "link": "https://world.hey.com/dhh/programming-types-and-mindsets-5b8490bc",
          "publishedOn": "2023-05-07T14:02:30.000Z",
          "wordCount": 644,
          "title": "Programming types and mindsets",
          "imageUrl": "https://world.hey.com/dhh/avatar-20210222112907000000-293866624"
        },
        {
          "id": "https://world.hey.com/dhh/escaping-creative-downturns-15281997",
          "author": null,
          "description": "If I'm stuck in a creative downturn, there's usually only one remedy: keep going. That is, accept the downturn, but continue to stare at the computer, waiting for it to pass. While staring at the computer, there's room for menial and managerial tasks put aside during more inspired times. Checking up on things, getting back to people, and reading copious amount of internet. But it's still a creative deadzone.\nThen the curse is usually broken when I'm sufficiently bored with the menial, the managerial, and the internet. That's the moment the creativity returns. When all the distractions have been drained of their doldrum. When there is literally nothing better to do than open the editor and code. \nI usually hit these downturns after a dopamine high, like one propelled by a particularly intense creative period. From working fervently on an idea, seeing it bloom, and then feeling the release of summer. As if fall must follow the flowers. As if the creative juices really are juices, and you can chug the jug. \nBut it can also happen after being out of the routine for too long. Maybe a particularly bad streak of weeks filled with meetings or travel. Like the mind has to settle back into a comfortable groove before sprouting again.\nI used to be more impatient with this oscillating process. Overly eager to get back riding high again. But as I've grown older, I've come to terms with the fact that it can't be eternal sunshine in the productive mind. You need to let weather pass. The grey, wet days of today soak the soil for the sun of tomorrow.\nComplaining about the rain won't do you any good, anyway. Don't argue with nature. Just wait. It'll be bright before you know it.",
          "link": "https://world.hey.com/dhh/escaping-creative-downturns-15281997",
          "publishedOn": "2023-05-06T15:10:09.000Z",
          "wordCount": 371,
          "title": "Escaping creative downturns",
          "imageUrl": "https://world.hey.com/dhh/avatar-20210222112907000000-293866624"
        }
      ]
    },
    {
      "title": "Jason Fried",
      "feedUrl": "https://world.hey.com/jason/feed.atom",
      "siteUrl": "https://world.hey.com/jason",
      "articles": [
        {
          "id": "https://world.hey.com/jason/protectionism-56be443d",
          "author": null,
          "description": "Companies love to protect.\nThey protect their brand with trademarks and lawsuits. They protect their data and trade secrets with rules, policies, and NDAs. They protect their money with budgets, CFOs, and investments.\nThey guard so many things, but all too often they fail to protect what’s both most vulnerable and precious: their employees’ time and attention.\nCompanies spend their employees’ time and attention as if there was an infinite supply of both. As if they cost nothing. Yet employees’ time and attention are among the scarcest resources we have.\nAt 37signals, we see it as our top job to protect our employees’ time and attention. You can’t expect people to do great work if they don’t have a full day’s attention to devote to it. Partial attention is barely attention at all.\nFor examp…",
          "link": "https://world.hey.com/jason/protectionism-56be443d",
          "publishedOn": "2023-06-02T17:46:11.000Z",
          "wordCount": 470,
          "title": "Protectionism",
          "imageUrl": "https://world.hey.com/jason/avatar-9f11ce77d31e68e834c564594ee0bc32a005ee8d"
        },
        {
          "id": "https://world.hey.com/jason/kill-overkill-4689acac",
          "author": null,
          "description": "Business is often seen as the art of acquisition. Acquiring talent, customers, revenue, profits, mindshare, marketshare. Building and growing requires consumption, addition, parlaying some of this into a lot of that.\nBut the smartest businesses — the ones that tend to stick around for the long haul — know that existence is also about avoidance.\nAvoiding careening variable costs, avoiding getting involved with things that aren't core to your business, avoiding spending time on things that don't matter, avoiding bad investments, avoiding people who don't help you prosper, and even avoiding customers who aren't the right fit.\nHowever, there's something even more fundamental to avoid. It would be easy to call it \"complexity\" but that's not quite it. Complexity can be necessary, and intricacy c…",
          "link": "https://world.hey.com/jason/kill-overkill-4689acac",
          "publishedOn": "2023-05-17T16:27:49.000Z",
          "wordCount": 520,
          "title": "Kill Overkill",
          "imageUrl": "https://world.hey.com/jason/avatar-20230413145313000000-2745081"
        },
        {
          "id": "https://world.hey.com/jason/yet-1b219fa8",
          "author": null,
          "description": "In the past I’ve written about how I used to be a hothead, reacting instantly to whatever I disagreed with. I didn’t even let someone finish their thought before I started forming my rebuttal. The remainder of their statement was just filler before I could slam back.\nI’m far from perfect, and I still occasionally catch myself doing this today, but far less frequently. And when I do it, I spot it and correct for it. I’d say I’m 90% better.\nLately I’ve been using another tool to help create some space before I form an opinion. It’s a simple word called “yet”.\nOver the past years I’ve found a lot of joy in things I’d normally have dismissed. And it’s all because of “yet”.\nInstead of “I don’t like that color”, it’s “I don’t like that color… yet”. Instead of I don’t like that taste, it’s “I don…",
          "link": "https://world.hey.com/jason/yet-1b219fa8",
          "publishedOn": "2023-05-12T16:41:06.000Z",
          "wordCount": 472,
          "title": "Yet",
          "imageUrl": "https://world.hey.com/jason/avatar-20230413145313000000-2745081"
        },
        {
          "id": "https://world.hey.com/jason/we-stand-with-the-underdogs-7d487d64",
          "author": null,
          "description": "What do they got?\nA big team, lots of money, a strong brand, seemingly unlimited resources, panache, reputation, all that. They’re established.\nThey’re your competitors.\nYou want to look away, but you see them everywhere. Their ads on your social, their name in the media, your dream clients on their website.\nBut you know what else they got?\nBigger company bloat. Overflowing obligations. Narratives to uphold. Appearances to maintain. Entitlement. Too much overhead. \nThey’re slow. They’re conservative. They talk too much. They’ve stopped taking risks. They’re resting on their laurels, gliding on their reputation. They’re on defense.\nWhat they’ve really got is a lot to lose.\nWhat do you got?\nHunger. Drive. Grit. Scrappiness. Independence. You’re on offense.\nYou don’t have enough, which is why you’re dangerous. You have no choice but to be clever and creative. To make up for what you don’t have with something they can’t have: The underdog spirit.\nYou can move. You can adjust. You can adapt. You can get it done while they’re still stuck deciding what to do.\nSmall is not a stepping stone. Small is not less than. It’s greater than. It’s faster than. It’s better than.\nSavor your position. You don’t get to be the underdog forever. The baton will be passed. But for now, it’s your magic wand. Use it.\nWe stand with the underdogs.\n\n-Jason",
          "link": "https://world.hey.com/jason/we-stand-with-the-underdogs-7d487d64",
          "publishedOn": "2023-05-11T17:52:59.000Z",
          "wordCount": 289,
          "title": "We stand with the Underdogs",
          "imageUrl": "https://world.hey.com/jason/avatar-20230413145313000000-2745081"
        },
        {
          "id": "https://world.hey.com/jason/you-can-learn-ai-later-08fce896",
          "author": null,
          "description": "Throw a dart on LinkedIn, or toss one into the ether on Twitter, and you'll likely hit a post proclaiming that you better \"learn AI\" or you're falling behind.\nMaster the tools and become a prompt engineer or someone else will tell the AI to summarize the long documents, kick off initial first drafts, and rewrite the headlines for you!\nNonsense.\nThis isn't saying AI, ChatGPT, or whatever comes next is nonsense. It's very real, very powerful, and very here.\nBut there's nothing you need to learn, or do, right now, other than be curious. Play around, kick the tires, poke and prod. Get a feel for what this new sauce tastes like. Have fun, it's not a test.\nBut become a master at once or you're going to lose your job to some AI expert? Nah. That's pure FUD. The stuff that everyone's talking about is barely 6 months old — there are no experts, there are just people playing experts on the internet.\nBesides, the best way to learn something is to need that something. Learning when you don't really need to is a good way to give up early. Learning when there's something you truly need to do, but can't, but could, is the right time to figure something out.\nThey say necessity is the mother of invention, but it's really the impetus for learning. The time will come, and you can figure it out then. If anything, it'll be easier to learn how to use AI once it settles in a bit. Currently it's a moving target.\nSo wait on it. Pop the pressure. Don't feel like you're falling behind. And don't drop everything to dig in. Start curious, stay curious, know what it's capable of, and, when the necessity strikes, figure it out. Until then, ignore the demands and focus on doing what you're already good at.\n\n-Jason",
          "link": "https://world.hey.com/jason/you-can-learn-ai-later-08fce896",
          "publishedOn": "2023-05-10T16:06:06.000Z",
          "wordCount": 381,
          "title": "You can learn AI later",
          "imageUrl": "https://world.hey.com/jason/avatar-20230413145313000000-2745081"
        },
        {
          "id": "https://world.hey.com/jason/on-hiring-rehiring-and-one-question-to-answer-them-all-5db97bcb",
          "author": null,
          "description": "Out of all things I’m asked about, hiring tops the list. From the actual hiring process, to reviews, to motivation and retention strategies, curiosity about hiring is on full charge.\nThere’s a lot to cover, but I’d like to share some thoughts about a moment that doesn’t get enough attention: The end of the first year and the beginning of the second.\nHiring is typically thought of as something you do once per person. Once someone’s hired, training, growing, and retaining are the next things you do. You may keep training someone, you may keep growing someone, you may keep promoting someone, but you surely don’t keep hiring someone.\nIt’s on that point I disagree.\nI’ve found that, actually, you hire someone at least twice. You hire someone initially, and then, if all goes well, you hire them a…",
          "link": "https://world.hey.com/jason/on-hiring-rehiring-and-one-question-to-answer-them-all-5db97bcb",
          "publishedOn": "2023-05-08T15:52:19.000Z",
          "wordCount": 723,
          "title": "On hiring, rehiring, and one question to answer them all",
          "imageUrl": "https://world.hey.com/jason/avatar-20230413145313000000-2745081"
        }
      ]
    },
    {
      "title": "The Plain Text Project",
      "feedUrl": "https://plaintextproject.online/feed.xml",
      "siteUrl": "https://plaintextproject.online",
      "articles": []
    },
    {
      "title": "Andrew Kelley",
      "feedUrl": "https://andrewkelley.me/rss.xml",
      "siteUrl": "http://andrewkelley.me/",
      "articles": []
    },
    {
      "title": "Martin Fowler",
      "feedUrl": "https://martinfowler.com/feed.atom",
      "siteUrl": "https://martinfowler.com/feed.atom",
      "articles": [
        {
          "id": "https://martinfowler.com/articles/intro-pet.html",
          "author": null,
          "description": "Making data open and available to all helps us all understand our world\n     and are thus better informed to shape the policies to run it. But such openness\n     does come with problems - one in particular is the invasion of people's\n     privacy. Detailed census information about household income helps debate\n     and planning for local government, but can reveal personal information that\n     citizens reasonably prefer to keep private. Privacy Enhancing Technologies\n     are tools that can finesse this problem. My colleague Katharine Jarmul is a\n     data scientist who is also an activist for personal privacy. Here she\n     introduces three of these tools that are usable now: Differential Privacy,\n     Distributed & Federated Analysis & Learning, and Encrypted Computation.\nmore…",
          "link": "https://martinfowler.com/articles/intro-pet.html",
          "publishedOn": "2023-05-30T14:32:00.000Z",
          "wordCount": 5384,
          "title": "Privacy Enhancing Technologies: An Introduction for Technologists",
          "imageUrl": "https://martinfowler.com/logo-sq.png"
        },
        {
          "id": "https://martinfowler.com/articles/dependency-composition.html",
          "author": null,
          "description": "Developers commonly ask \"what framework should we use for dependency\n     injection\". Daniel Somerfield explains why this is the wrong question,\n     instead we should focus how to have clearly separated modules with a simple\n     composition mechanism between them. He illustrates how he approaches this\n     in TypeScript, with a minimalist \"function-first\" approach, on a simple\n     example application separating application logic from persistence.\nmore…",
          "link": "https://martinfowler.com/articles/dependency-composition.html",
          "publishedOn": "2023-05-23T17:56:00.000Z",
          "wordCount": 6803,
          "title": "Dependency Composition",
          "imageUrl": "https://martinfowler.com/articles/dependency-composition/card.png"
        },
        {
          "id": "https://martinfowler.com/articles/2023-xref-problem.html",
          "author": null,
          "description": "Recently I found that xref in Emacs had stopped working for me on my mac laptop. Today I finally tried to figure out what went wrong. xref is just a front-end, all the work is done by backends. It took a while for me to realize (ie remember) that I was using the excellent dumb-jump package as the backend. dumb-jump uses a range of fast search commands (such as ag and ripgrep) to detect references without using the awkward tags tables that Emacs used to rely on.\nThe command flow between xref and dumb-jump is difficult to follow, but looking at the dumb-jump customization page alerted me to dumb-jump having a debug option. With this enabled, I could see what command dumb-jump was sending to the operating system. By default it uses git grep while in a git repo (almost everything I do is in a git repo). Its git grep command is quite complex, using regexps to (I assume) get more sensible results. I tried out the command it issued in my own terminal and it failed to find anything, while a simple git grep worked fine.\nArmed with a better knowledge of what was failing, I dug into dumb-jump’s issues and found Issue with git-grep. Reading that, I discovered that a change to git grep means that how git grep processes regexes differs depending on the operating system. This would mean that dumb-jump would need to detect git-grep’s version and the underlying OS to pick the right regexes for its search.\nThe fix for me is to force dumb-jump to use another searcher with (setq dumb-jump-force-searcher 'rg). With that my xref commands worked again.",
          "link": "https://martinfowler.com/articles/2023-xref-problem.html",
          "publishedOn": "2023-05-19T16:48:00.000Z",
          "wordCount": 389,
          "title": "Emacs xref stopped working on Macs with dumb-jump",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Adam Wathan's Work Journal",
      "feedUrl": "https://adamwathan.me/journal/rss.xml",
      "siteUrl": "https://adamwathan.me/journal",
      "articles": []
    },
    {
      "title": "Rust Blog",
      "feedUrl": "https://blog.rust-lang.org/feed.xml",
      "siteUrl": "https://blog.rust-lang.org/",
      "articles": [
        {
          "id": "https://blog.rust-lang.org/2023/06/01/Rust-1.70.0.html",
          "author": null,
          "description": "The Rust team is happy to announce a new version of Rust, 1.70.0. Rust is a programming language empowering everyone to build reliable and efficient software.\nIf you have a previous version of Rust installed via rustup, you can get 1.70.0 with:\nrustup update stable\n\nIf you don't have it already, you can get rustup from the appropriate page on our website, and check out the detailed release notes for 1.70.0 on GitHub.\nIf you'd like to help us out by testing future releases, you might consider updating locally to use the beta channel (rustup default beta) or the nightly channel (rustup default nightly). Please report any bugs you might come across!\nWhat's in 1.70.0 stable\nSparse by default for crates.io\nCargo's \"sparse\" protocol is now enabled by default for reading the index from crates.io.…",
          "link": "https://blog.rust-lang.org/2023/06/01/Rust-1.70.0.html",
          "publishedOn": "2023-06-01T00:00:00.000Z",
          "wordCount": 996,
          "title": "Announcing Rust 1.70.0",
          "imageUrl": "https://www.rust-lang.org/static/images/rust-social-wide.jpg"
        },
        {
          "id": "https://blog.rust-lang.org/2023/05/29/RustConf.html",
          "author": null,
          "description": "On May 26th 2023, JeanHeyd Meneide announced they would not speak at RustConf 2023 anymore. They were invited to give a keynote at the conference, only to be told two weeks later the keynote would be demoted to a normal talk, due to a decision made within the Rust project leadership.\nThat decision was not right, and first off we want to publicly apologize for the harm we caused. We failed you JeanHeyd. The idea of downgrading a talk after the invitation was insulting, and nobody in leadership should have been willing to entertain it.\nEveryone in leadership chat is still working to fully figure out everything that went wrong and how we can prevent all of this from happening again. That work is not finished yet. Still, we want to share some steps we are taking to reduce the risk of something…",
          "link": "https://blog.rust-lang.org/2023/05/29/RustConf.html",
          "publishedOn": "2023-05-29T00:00:00.000Z",
          "wordCount": 515,
          "title": "On the RustConf keynote",
          "imageUrl": "https://www.rust-lang.org/static/images/rust-social-wide.jpg"
        },
        {
          "id": "https://blog.rust-lang.org/2023/05/09/Updating-musl-targets.html",
          "author": null,
          "description": "Beginning with Rust 1.71 (slated for stable release on 2023-07-13), the various *-linux-musl targets will ship with musl 1.2.3.\nThese targets currently use musl 1.1.24.\nWhile musl 1.2.3 introduces some new features, most notably 64-bit time on all platforms, it is ABI compatible with earlier musl versions.\nAs such, this change is unlikely to affect you.\nUpdated targets\nThe following targets will be updated:\nTarget\nSupport Tier\n\n\n\n\naarch64-unknown-linux-musl\nTier 2 with Host Tools\n\n\nx86_64-unknown-linux-musl\nTier 2 with Host Tools\n\n\narm-unknown-linux-musleabi\nTier 2\n\n\narm-unknown-linux-musleabihf\nTier 2\n\n\narmv5te-unknown-linux-musleabi\nTier 2\n\n\narmv7-unknown-linux-musleabi\nTier 2\n\n\narmv7-unknown-linux-musleabihf\nTier 2\n\n\ni586-unknown-linux-musl\nTier 2\n\n\ni686-unknown-linux-musl\nTier 2\n\n\nmips-unknown-linux-musl\nTier 2\n\n\nmips64-unknown-linux-muslabi64\nTier 2\n\n\nmips64el-unknown-linux-muslabi64\nTier 2\n\n\nmipsel-unknown-linux-musl\nTier 2\n\n\nhexagon-unknown-linux-musl\nTier 3\n\n\nmips64-openwrt-linux-musl\nTier 3\n\n\npowerpc-unknown-linux-musl\nTier 3\n\n\npowerpc64-unknown-linux-musl\nTier 3\n\n\npowerpc64le-unknown-linux-musl\nTier 3\n\n\nriscv32gc-unknown-linux-musl\nTier 3\n\n\nriscv64gc-unknown-linux-musl\nTier 3\n\n\ns390x-unknown-linux-musl\nTier 3\n\n\nthumbv7neon-unknown-linux-musleabihf\nTier 3\n\n\n\nNote: musl 1.2.3 does not raise the minimum required Linux kernel version for any target.\nWill 64-bit time break the libc crate on 32-bit targets?\nNo, the musl project made this change carefully preserving ABI compatibility.\nThe libc crate will continue to function correctly without modification.\nA future version of the libc crate will update the definitions of time-related structures and functions to be 64-bit on all musl targets however this is blocked on the musl targets themselves first being updated.\nAt present, there is no anticipated date when this change will take place and care will be taken to help the Rust ecosystem transition successfully to the updated time-related definitions.",
          "link": "https://blog.rust-lang.org/2023/05/09/Updating-musl-targets.html",
          "publishedOn": "2023-05-09T00:00:00.000Z",
          "wordCount": 327,
          "title": "Updating Rust's Linux musl targets",
          "imageUrl": "https://www.rust-lang.org/static/images/rust-social-wide.jpg"
        }
      ]
    },
    {
      "title": "Inside Rust Blog",
      "feedUrl": "https://blog.rust-lang.org/inside-rust/feed.xml",
      "siteUrl": "https://blog.rust-lang.org/inside-rust/",
      "articles": [
        {
          "id": "https://blog.rust-lang.org/inside-rust/2023/05/29/1.70.0-prerelease.html",
          "author": null,
          "description": "The 1.70.0 pre-release is ready for testing. The release is scheduled for\nJune 1. Release notes can be found here.\nYou can try it out locally by running:\nRUSTUP_DIST_SERVER=https://dev-static.rust-lang.org rustup update stable\n\nThe index is https://dev-static.rust-lang.org/dist/2023-05-29/index.html.\nYou can leave feedback on the internals thread.\nThe release team is also thinking about changes to our pre-release process:\nwe'd love your feedback on this GitHub issue.",
          "link": "https://blog.rust-lang.org/inside-rust/2023/05/29/1.70.0-prerelease.html",
          "publishedOn": "2023-05-29T00:00:00.000Z",
          "wordCount": 139,
          "title": "1.70.0 pre-release testing",
          "imageUrl": "https://www.rust-lang.org/static/images/rust-social-wide.jpg"
        },
        {
          "id": "https://blog.rust-lang.org/inside-rust/2023/05/09/api-token-scopes.html",
          "author": null,
          "description": "Roughly three years ago Pietro Albini opened an RFC called \"crates.io token scopes\". This RFC described an improvement to the existing API tokens, that everyone is using to publish crates to the crates.io package registry. The proposal was to make it possible to restrict API tokens to 1) certain operations and 2) certain crates.\nUnfortunately, the crates.io team members were quite busy at the time, so it took a while for this proposal to get accepted. To be precise, during the EuroRust conference in October 2022 we talked about the RFC again and after a few modifications the RFC was moved into FCP status and then finally merged.\nThe implementation was started soon after, but was paused again due to other priorities at the time. Fortunately, I was lucky enough to get one of the software engineering jobs at the Rust Foundation, so in early April the development continued, and I am happy to report:\nAPI token scopes on crates.io are now in a public beta testing period!\nFor details on what these token scopes are and how they are supposed to work, I recommend reading through the RFC. If you want to try them out, you can go to https://crates.io/settings/tokens/new and create a new API token scoped to the operations and crates you want:\n\nPlease note that this page is currently not reachable from the regular user interface, you have to access it via URL directly while we test it out.\nFinally, if you notice any issues, or if you have any questions don't hesitate to find us on Zulip or open an issue on GitHub.",
          "link": "https://blog.rust-lang.org/inside-rust/2023/05/09/api-token-scopes.html",
          "publishedOn": "2023-05-09T00:00:00.000Z",
          "wordCount": 342,
          "title": "API token scopes",
          "imageUrl": "https://www.rust-lang.org/static/images/rust-social-wide.jpg"
        }
      ]
    },
    {
      "title": "Jorge Manrubia",
      "feedUrl": "https://world.hey.com/jorge/feed.atom",
      "siteUrl": "https://world.hey.com/jorge",
      "articles": [
        {
          "id": "https://world.hey.com/jorge/erase-and-rewind-2ff46b55",
          "author": null,
          "description": "Imagine a problem you can't understand without solving it first. The first time I saw software development described as a wicked problem was in Code Complete by Steve McConnell, and I haven't seen anything but a constant validation of this proposition throughout my career. And it's a paradoxical one with several counterintuitive corollaries. Here's one: if you don't understand what you need to build, you should start building it. And here's another: sweating to build something just to hit the delete button is sometimes part of the process.\n\n\nWriting and making code work is costly; thinking and discussing things in the abstract is cheap. Everything holds up on paper, but computers are picky. I don’t believe that LLMs – as revolutionary as they are – will change this imbalance soon. Spending…",
          "link": "https://world.hey.com/jorge/erase-and-rewind-2ff46b55",
          "publishedOn": "2023-06-04T06:14:28.000Z",
          "wordCount": 593,
          "title": "Erase and rewind",
          "imageUrl": "https://world.hey.com/jorge/2ff46b55/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHNLd2VJQUJkSyIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--d8668a77ee6c586c4d0353738469e8d8e08054f3/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDRG9UY21WemFYcGxYM1J2WDJacGJHeGJCMmtDc0FScEFuWUNPZ3h4ZFdGc2FYUjVhUzA2Q25OMGNtbHdWQT09IiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--5f3b12054ee1575e23e552561c36229a846c13ea/closeup-computer-keyboard.jpg"
        }
      ]
    },
    {
      "title": "Notes on software development",
      "feedUrl": "https://notes.eatonphil.com/rss.xml",
      "siteUrl": "http://notes.eatonphil.com/",
      "articles": [
        {
          "id": "http://notes.eatonphil.com/2023-05-25-raft.html",
          "author": null,
          "description": "As part of bringing myself up-to-speed after joining TigerBeetle, I\nwanted some background on how distributed consensus and replicated state\nmachines protocols work. TigerBeetle uses Viewstamped\nReplication. But I\nwanted to understand all popular protocols and I decided to start with\nRaft.\nWe'll implement two key components of Raft in this post (leader\nelection and log replication). Around 1k lines of Go. It took me\naround 7 months of sporadic studying to come to (what I hope is) an\nunderstanding of the basics.\nDisclaimer: I'm not an expert. My implementation isn't yet hooked\nup to Jepsen. I've run it\nthrough a mix of\nmanual and\nautomated\ntests and\nit seems generally correct. This is not intended to be used in\nproduction. It's just for my education.\nAll code for this project is available o…",
          "link": "http://notes.eatonphil.com/2023-05-25-raft.html",
          "publishedOn": "2023-05-25T00:00:00.000Z",
          "wordCount": 9619,
          "title": "Implementing a distributed key-value store on top of implementing Raft in Go",
          "imageUrl": null
        },
        {
          "id": "http://notes.eatonphil.com/high-quality-subreddits-you-should-be-following.html",
          "author": null,
          "description": "Originally published on December 5, 2021.\n\nIf you are an experienced software developer whose only exposure to\nreddit is dank memes, proggit or even\nlanguage-specific subreddits like\n/r/python, you're missing out.\nWhat follows are my favorite subreddits in tech. My criteria is that:\nThe subreddit topic is relevant to advancing as a programmer\nPosts generally go into good depth\nThe comments stay on topic\nAnd the shit-posting is minimal\nThis list isn't hard to guess at if you consider advanced topics\nin software. But I wanted to share because I think it's worth\nexplicitly supporting high-quality subreddits.\n/r/EmuDev\nMy favorite sub of all. Also has a phenomenal Discord group.\n/r/ProgrammingLanguages\nFocuses a little more on PLT topics (parsing techniques, syntax, type systems) than on compiling and interpreting techniques, but still good.\n/r/DatabaseDevelopment\nAll about database internals, which ends up involving a bunch of\ncorrectness and distributed systems stuff as well.\nDisclosure: I run this sub. It's at 2.7k+ members at time of publishing.\n/r/ReverseEngineering\nThe largest subreddit on this list but still has pretty good posts.\n/r/EsoLangs\nOne of the best/most fun intros to programming languages/compilers/interpreters is through languages like Brainfuck. This sub does a good job of keeping the fun going.\n/r/Compilers\n/r/GraphicsProgramming\nWhile some language subreddits are pretty good, they are more so a\nmixed bag than some of the topic-specific subreddits here. So they\ndon't make my list, more on principle than anything else.\nIf there is a good one already, send me it!\nWhat am I missing?\nAm I missing other amazing subreddits? Just don't say\nlanguage-specific ones. :)\n\nIt's an incorrect meme IMO that tech Reddit is low-quality. You just have to find the interesting subreddits.\nI've updated my list for 2023.https://t.co/OtM2tk8HOn pic.twitter.com/ymyzChp0SO\n— Phil Eaton (@eatonphil) May 16, 2023",
          "link": "http://notes.eatonphil.com/high-quality-subreddits-you-should-be-following.html",
          "publishedOn": "2023-05-16T00:00:00.000Z",
          "wordCount": 2242,
          "title": "My favorite software subreddits",
          "imageUrl": null
        },
        {
          "id": "http://notes.eatonphil.com/books-developers-should-read.html",
          "author": null,
          "description": "Originally published on February 1, 2021. The original version\n  included two books I don't think are actually so worthwhile. This\n  list is down to two. I think that's a good thing actually.\n\nThese are the books I recommend to developers wanting to improve their\nskills as professional programmers because of high information\ndensity, believable premises/examples, and being well edited.\nYou don't need to read books to improve as a developer but\nthey are unparalleled in quickly helping you gain depth in a subject.\nHigh Performance Browser Networking\nIf you deal with networks, you would probably benefit from this book.\nIt is a thorough high level introduction to mobile networks, browser\nnetwork protocols, and fundementals of networking.\nDesigning Data-Intensive Applications\nIf you use a database (including an in-memory array of items you\nsearch periodically) or if you build APIs, you would probably benefit\nfrom this book. A solid introduction to distributed computing, data\ntransfer, indexing, etc.\nThat's it!\nGeneric software books conspicuously not on this list for\nme:\nClean Code\nJavaScript the Good Parts\nDesign Patterns/Gang of Four\nStructure and Interpretation of Computer Programs\nA Philosophy of Software Design\nThey're not all bad but give nowhere near as much return for the\ninvestment of your time.\n\nFour books I recommend to professional developers wanting to improve their craft, and a few I'd nothttps://t.co/1aTrfqZ9bd\n— Phil Eaton (@phil_eaton) February 2, 2021",
          "link": "http://notes.eatonphil.com/books-developers-should-read.html",
          "publishedOn": "2023-05-16T00:00:00.000Z",
          "wordCount": 2179,
          "title": "Two books I recommend to developers",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "CoRecursive: Coding Stories",
      "feedUrl": "https://corecursive.libsyn.com/feed",
      "siteUrl": "http://corecursive.com",
      "articles": [
        {
          "id": "091c1f58-93d8-400a-a440-affae6319cf4",
          "author": null,
          "description": "Today, we meet Ben Dumke-von der Ehe, one of the early developers on the Stack Overflow team. \n He was on the front lines as the platform transformed how programmers worked. And he embodies the spirit of Stack Overflow:  Its transparency, playfulness, and even some of its struggles to be as welcoming and friendly as it should be. \n  \n But you'll see what I mean. \n  \n So stick around as Ben takes us on a journey through the building of Stack Overflow. Get ready for a candid inside look at the creation of a platform that would become an essential part of the developer community and the internet as we know it. \n  \nEpisode Page\n Support The Show\n Subscribe To The Podcast\n Join The Newsletter",
          "link": "https://corecursive.com/stack-overflow/",
          "publishedOn": "2023-06-02T10:00:00.000Z",
          "wordCount": null,
          "title": "Story: Quitting (And Then Rejoining) Stack Overflow",
          "itunes": {
            "duration": "53:28"
          },
          "enclosure": {
            "length": "52488576",
            "type": "audio/mpeg",
            "url": "https://chtbl.com/track/7D91G/traffic.libsyn.com/secure/corecursive/089-StackOverflow.mp3?dest-id=628353"
          },
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Notes on software development",
      "feedUrl": "https://notes.eatonphil.com/rss.xml",
      "siteUrl": "http://notes.eatonphil.com/",
      "articles": [
        {
          "id": "http://notes.eatonphil.com/2023-05-25-raft.html",
          "author": null,
          "description": "As part of bringing myself up-to-speed after joining TigerBeetle, I\nwanted some background on how distributed consensus and replicated state\nmachines protocols work. TigerBeetle uses Viewstamped\nReplication. But I\nwanted to understand all popular protocols and I decided to start with\nRaft.\nWe'll implement two key components of Raft in this post (leader\nelection and log replication). Around 1k lines of Go. It took me\naround 7 months of sporadic studying to come to (what I hope is) an\nunderstanding of the basics.\nDisclaimer: I'm not an expert. My implementation isn't yet hooked\nup to Jepsen. I've run it\nthrough a mix of\nmanual and\nautomated\ntests and\nit seems generally correct. This is not intended to be used in\nproduction. It's just for my education.\nAll code for this project is available o…",
          "link": "http://notes.eatonphil.com/2023-05-25-raft.html",
          "publishedOn": "2023-05-25T00:00:00.000Z",
          "wordCount": 9619,
          "title": "Implementing a distributed key-value store on top of implementing Raft in Go",
          "imageUrl": null
        },
        {
          "id": "http://notes.eatonphil.com/high-quality-subreddits-you-should-be-following.html",
          "author": null,
          "description": "Originally published on December 5, 2021.\n\nIf you are an experienced software developer whose only exposure to\nreddit is dank memes, proggit or even\nlanguage-specific subreddits like\n/r/python, you're missing out.\nWhat follows are my favorite subreddits in tech. My criteria is that:\nThe subreddit topic is relevant to advancing as a programmer\nPosts generally go into good depth\nThe comments stay on topic\nAnd the shit-posting is minimal\nThis list isn't hard to guess at if you consider advanced topics\nin software. But I wanted to share because I think it's worth\nexplicitly supporting high-quality subreddits.\n/r/EmuDev\nMy favorite sub of all. Also has a phenomenal Discord group.\n/r/ProgrammingLanguages\nFocuses a little more on PLT topics (parsing techniques, syntax, type systems) than on compiling and interpreting techniques, but still good.\n/r/DatabaseDevelopment\nAll about database internals, which ends up involving a bunch of\ncorrectness and distributed systems stuff as well.\nDisclosure: I run this sub. It's at 2.7k+ members at time of publishing.\n/r/ReverseEngineering\nThe largest subreddit on this list but still has pretty good posts.\n/r/EsoLangs\nOne of the best/most fun intros to programming languages/compilers/interpreters is through languages like Brainfuck. This sub does a good job of keeping the fun going.\n/r/Compilers\n/r/GraphicsProgramming\nWhile some language subreddits are pretty good, they are more so a\nmixed bag than some of the topic-specific subreddits here. So they\ndon't make my list, more on principle than anything else.\nIf there is a good one already, send me it!\nWhat am I missing?\nAm I missing other amazing subreddits? Just don't say\nlanguage-specific ones. :)\n\nIt's an incorrect meme IMO that tech Reddit is low-quality. You just have to find the interesting subreddits.\nI've updated my list for 2023.https://t.co/OtM2tk8HOn pic.twitter.com/ymyzChp0SO\n— Phil Eaton (@eatonphil) May 16, 2023",
          "link": "http://notes.eatonphil.com/high-quality-subreddits-you-should-be-following.html",
          "publishedOn": "2023-05-16T00:00:00.000Z",
          "wordCount": 2242,
          "title": "My favorite software subreddits",
          "imageUrl": null
        },
        {
          "id": "http://notes.eatonphil.com/books-developers-should-read.html",
          "author": null,
          "description": "Originally published on February 1, 2021. The original version\n  included two books I don't think are actually so worthwhile. This\n  list is down to two. I think that's a good thing actually.\n\nThese are the books I recommend to developers wanting to improve their\nskills as professional programmers because of high information\ndensity, believable premises/examples, and being well edited.\nYou don't need to read books to improve as a developer but\nthey are unparalleled in quickly helping you gain depth in a subject.\nHigh Performance Browser Networking\nIf you deal with networks, you would probably benefit from this book.\nIt is a thorough high level introduction to mobile networks, browser\nnetwork protocols, and fundementals of networking.\nDesigning Data-Intensive Applications\nIf you use a database (including an in-memory array of items you\nsearch periodically) or if you build APIs, you would probably benefit\nfrom this book. A solid introduction to distributed computing, data\ntransfer, indexing, etc.\nThat's it!\nGeneric software books conspicuously not on this list for\nme:\nClean Code\nJavaScript the Good Parts\nDesign Patterns/Gang of Four\nStructure and Interpretation of Computer Programs\nA Philosophy of Software Design\nThey're not all bad but give nowhere near as much return for the\ninvestment of your time.\n\nFour books I recommend to professional developers wanting to improve their craft, and a few I'd nothttps://t.co/1aTrfqZ9bd\n— Phil Eaton (@phil_eaton) February 2, 2021",
          "link": "http://notes.eatonphil.com/books-developers-should-read.html",
          "publishedOn": "2023-05-16T00:00:00.000Z",
          "wordCount": 2179,
          "title": "Two books I recommend to developers",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Dmitri Pavlutin Blog",
      "feedUrl": "https://dmitripavlutin.com/rss.xml",
      "siteUrl": "https://dmitripavlutin.com",
      "articles": [
        {
          "id": "https://dmitripavlutin.com/javascript-pure-function/",
          "author": "Dmitri Pavlutin",
          "description": "A pure function always returns the same value for the same arguments and produces no side-effects.",
          "link": "https://dmitripavlutin.com/javascript-pure-function/",
          "publishedOn": "2023-05-15T00:00:00.000Z",
          "wordCount": 2617,
          "title": "Pure Functions in JavaScript: A Beginner's Guide",
          "imageUrl": "https://dmitripavlutin.com/javascript-pure-function/cover.png"
        }
      ]
    },
    {
      "title": "Dietcode | Sid's blog",
      "feedUrl": "https://dietcode.io/rss",
      "siteUrl": "https://dietcode.io/",
      "articles": []
    },
    {
      "title": "Infrequently Noted",
      "feedUrl": "https://infrequently.org/feed/",
      "siteUrl": "https://infrequently.org/feed/feed.xml",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}